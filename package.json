{
  "name": "value-object-cache",
  "version": "1.0.0",
  "description": "A value object cache that can be used to make value objects behave like primitive types, i.e. if two variables `a` and `b` point to instances of the same class and have the same value, then `a === b`, otherwise `a !== b`.",
  "main": "./dist/index.js",
  "module": "./dist/index.mjs",
  "types": "./dist/index.d.ts",
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "tsup",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/malinges/value-object-cache.git"
  },
  "keywords": [
    "value",
    "object",
    "cache",
    "weakref",
    "finalizationregistry"
  ],
  "author": "Simon Malinge <simon.malinge@gmail.com> (https://github.com/malinges)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/malinges/value-object-cache/issues"
  },
  "homepage": "https://github.com/malinges/value-object-cache#readme",
  "devDependencies": {
    "ts-node": "^10.9.2",
    "tsup": "^8.3.5",
    "typescript": "^5.6.3"
  }
}
